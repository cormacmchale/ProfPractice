{"version":3,"sources":["webpack:///./src/app/database/database.module.ts","webpack:///./src/app/database/database.page.html","webpack:///./src/app/database/database.page.scss","webpack:///./src/app/database/database.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEE;AAE/C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB/B,83B;;;;;;;;;;;ACAA,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACO;AAChB;AACgC;AAiBzE;IAEE,sBAAoB,IAAoB,EAAU,MAAa;QAA3C,SAAI,GAAJ,IAAI,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAO;IAAI,CAAC;IAGpE,+BAAQ,GAAR;QAEE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,oCAAa,GAAb;QAAA,iBAMC;QAJG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,aAAG;YAEhC,KAAI,CAAC,OAAO,GAAC,GAAG;QAClB,CAAC,CAAC,CAAC;IACT,CAAC;IACD,sCAAe,GAAf;QAEE,IAAI,IAAI,GAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QACnC,IAAI,QAAQ,GAAU,IAAI,CAAC,KAAK;QAChC,KAAuB,UAAY,EAAZ,SAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY,EACnC;YADK,IAAI,UAAU;YAEjB,IAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,IAAI,QAAQ,EAC7E;gBACG,IAAI,QAAQ,GAAU,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW;gBACxF,IAAI,SAAS,GAAU,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW;gBAC1F,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAC,SAAS,CAAC;aACpC;SACF;IACH,CAAC;IACD,gCAAS,GAAT,UAAU,CAAQ,EAAC,CAAQ;QAEzB,sEAAQ,CAAC,OAAO,CAAC;YACf,QAAQ,EAAC,EAAC,KAAK,EAAC,CAAC;gBACP,KAAK,EAAC,CAAC;aACR;SAAC,CAAC,CAAC,IAAI,CAAC,UAAC,OAAyB;YAE3C,IAAI,QAAQ,GAAU,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAC,GAAG,GAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,GAAC,GAAG,GAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ;YACzF,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAzCU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,kGAAmC;;SAEpC,CAAC;yCAG0B,sEAAc,EAAiB,sDAAM;OAFpD,YAAY,CA0CxB;IAAD,mBAAC;CAAA;AA1CwB","file":"database-database-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DatabasePage } from './database.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DatabasePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DatabasePage]\n})\nexport class DatabasePageModule {}\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n          <ion-menu-button></ion-menu-button>   \\r\\n      </ion-buttons>\\r\\n      <ion-row>\\r\\n    <ion-col text-start padding-top>\\r\\n    <ion-title>\\r\\n      Going My Way/RideShare\\r\\n    </ion-title>\\r\\n  </ion-col>\\r\\n  <ion-col text-end>\\r\\n    <ion-button (click)=\\\"getUserJournies()\\\" shape=\\\"round\\\" fill=\\\"outline\\\">\\r\\n        <ion-icon slot=\\\"start\\\" name=\\\"locate\\\"></ion-icon>\\r\\n        Show Journies\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n  <!-- might not be needed -->\\r\\n  <!-- <ion-button (click)=\\\"getUserJournies()\\\">Manage My Journies</ion-button> -->\\r\\n\\r\\n  <ion-item *ngFor=\\\"let info of journeyAddressArray\\\">\\r\\n    <ion-label>info</ion-label>\\r\\n  </ion-item>\\r\\n  \\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdGFiYXNlL2RhdGFiYXNlLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { JourneyService } from 'src/app/journey.service';\nimport { Router } from '@angular/router';\nimport { Geocoder, GeocoderResult } from '@ionic-native/google-maps/ngx';\nimport {\n  GoogleMaps,\n  GoogleMap,\n  GoogleMapsEvent,\n  GoogleMapOptions,\n  CameraPosition,\n  MarkerOptions,\n  Marker,\n  Environment,\n  ILatLng\n} from '@ionic-native/google-maps';\n@Component({\n  selector: 'app-database',\n  templateUrl: './database.page.html',\n  styleUrls: ['./database.page.scss'],\n})\nexport class DatabasePage implements OnInit {\n\n  constructor(private data: JourneyService, private router:Router) { }\n  getData:any[];\n  addArray:[];\n  ngOnInit()\n  {\n    this.loadDocuments();\n  }\n\n  loadDocuments()\n  {\n      this.data.getJourney().subscribe(res=>\n        {\n          this.getData=res      \n        });\n  }\n  getUserJournies()\n  {\n    let user:any = this.data.getUser();\n    let userName:string = user.email\n    for (let myJournies of this.getData)\n    {\n      if(myJournies.payload.doc._document.proto.fields.name.stringValue == userName)\n      {\n         let startLat:number = myJournies.payload.doc._document.proto.fields.startlat.doubleValue\n         let startLong:number = myJournies.payload.doc._document.proto.fields.startlong.doubleValue\n         this.geoCoding(startLat,startLong)\n      }\n    }  \n  }\n  geoCoding(x:number,y:number)\n  {\n    Geocoder.geocode({\n      position:{\"lat\":x,\n                \"lng\":y\n              }}).then((results: GeocoderResult[])=>\n    {\n      let location:string = results[0].country+\",\"+results[0].adminArea+\",\"+results[0].locality\n      console.log(location)\n    })\n  }\n}\n"],"sourceRoot":""}